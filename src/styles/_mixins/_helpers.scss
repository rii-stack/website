@mixin center($position) {
	position: absolute;

	@if $position == 'vertical' {
		top: 50%;
		transform: translateY(-50%);
	} @else if $position == 'horizontal' {
		left: 50%;
		transform: translate(-50%);
	} @else if $position == 'both' {
		top: 50%;
		left: 50%;
		transform: translate(-50%, -50%);
	}
}

@mixin container($width: 120rem, $padding: 6.25%) {
	margin: 0 auto;
	padding: 0 $padding;
	max-width: $width;
	box-sizing: content-box;
}

@mixin pseudo($display: block, $pos: absolute, $content: '', $width: 100%, $height: 100%) {
	content: $content;
	display: $display;
	position: $pos;
	width: $width;
	height: $height;
}

@mixin transition($prop, $time, $easing: ease-in, $delay: 0s) {
	$transition: ();
	@for $i from 1 through length($prop) {
		@for $j from 0 to (length($prop)) - (length($time)) {
			$time: join($time, nth($time, -1));
		}
		@for $j from 0 to (length($prop)) - (length($easing)) {
			$easing: join($easing, nth($easing, -1));
		}
		@for $j from 0 to (length($prop)) - (length($delay)) {
			$delay: join($delay, nth($delay, -1));
		}

		$transition: append(
			$transition,
			(nth($prop, $i) nth($time, $i) nth($easing, $i) nth($delay, $i)),
			$separator: comma
		);
	}
	transition: $transition;
}

@mixin hidden {
	opacity: 0;
	visibility: hidden;
}

@mixin visible {
	opacity: 1;
	visibility: visible;
}
